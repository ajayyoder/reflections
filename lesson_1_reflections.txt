How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could see where I may have had a typo/see the section of a code that might have
    caused a bug

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could be helpful to go back and visit previous iterations of a program to
    root out bugs and see where things went wrong

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git lets you save where you know it will be important. Google docs may save too frequently
    or go over versions of the code that may be helpful to save

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git can allow you to save entire projects in one destination to compare all versions of         all files at a certain time.

How can you use the commands git log and git diff to view the history of files?

    Type git log to view the entire history (each commit with comments). To get the differences
    type git diff address_a address_b where address_a is the code for the first commit and         address_b is the code for the second

How might using version control make you more confident to make changes that
could break something?

    Using git checkout allows you to figure out into which commit the bug was added. So if you		    mess something up, its easy to root out the issue with checkout and diff.

Now that you have your workspace set up, what do you want to try using Git for?

    The rest of this course.